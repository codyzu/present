rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if false;
    }
    match /presentations/{presentation} {
    	allow read: if true;
      
      allow create: if request.auth != null
      	// TODO: should this be aligned with all the possible fields?
      	&& request.resource.data.keys().hasAll(['uid', 'created', 'username', 'pages', 'notes', 'title'])
      	&& request.resource.data.keys().hasOnly(['uid', 'created', 'username', 'pages', 'notes', 'title'])
        && request.auth.uid == request.resource.data.uid;
        
      // allow update: if request.auth != null;
        
      allow update: if request.auth != null
        && request.auth.uid == resource.data.uid
        && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['original', 'pages', 'rendered', 'title', 'notes', 'username']); 
      
      allow delete: if request.auth != null
        && request.auth.uid == resource.data.uid;
    }
    match /users/{userId} {
    	allow write: if request.auth != null && request.auth.uid == userId;
      allow read: if request.auth != null && request.auth.uid == userId;
    }
  }
}